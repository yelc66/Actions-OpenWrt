name: x86_R24_10

on:
  workflow_dispatch:
    inputs:
      owner:
        description: '仓库的拥有者'
        type: string
        required: true
        default: 'coolsnowwolf'
      repo:
        description: ' 仓库的名字'
        type: string
        required: true
        default: 'lede'
      branch:
        description: '分支 '
        type: string
        required: true
        default: 'master'
      multithreading:
        description: '开启多线程编译 (Enable multithreading build)'
        type: boolean
        default: true
      ssh:
        description: '使用 ssh 连接到编译环境 (Connect to the build environment using ssh)'
        type: boolean
        default: false

env:
  CONFIG_FILE: ""
  DIY_P2_SH: diy-part2.sh
  UPLOAD_FIRMWARE: true
  UPLOAD_RELEASE: true
  TZ: Asia/Shanghai

jobs:
  build:
    runs-on: ubuntu-22.04

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Init build environment
      run: |
        sudo apt-get update
        sudo apt-get install -y build-essential clang flex bison g++ gawk gcc-multilib gettext git libncurses-dev libssl-dev python3 unzip zlib1g-dev file wget python2.7
        sudo timedatectl set-timezone "$TZ"

    - name: Clone source
      run: |
        git clone https://github.com/${{ github.event.inputs.owner }}/${{ github.event.inputs.repo }} -b ${{ github.event.inputs.branch }} openwrt
        ln -sf $PWD/openwrt $GITHUB_WORKSPACE/openwrt

    - name: Update & install feeds
      run: |
        cd openwrt
        ./scripts/feeds update -a
        ./scripts/feeds install -a

    - name: SSH via tmate for menuconfig
      if: ${{ github.event.inputs.ssh == 'true' }}
      uses: mxschmitt/action-tmate@v3
      with:
        limit-access-to-actor: true

    - name: Save .config as timestamped file
      if: ${{ github.event.inputs.ssh == 'true' }}
      run: |
        cd openwrt
        NOW=$(date +'%Y%m%d')
        cp .config ../${NOW}.config
        echo "CONFIG_FILE=${NOW}.config" >> $GITHUB_ENV

    - name: Load .config
      run: |
        [ -e "$CONFIG_FILE" ] && cp "$CONFIG_FILE" openwrt/.config
        chmod +x $DIY_P2_SH
        cd openwrt
        $GITHUB_WORKSPACE/$DIY_P2_SH

    - name: Download package
      working-directory: ./openwrt
      run: |
        make download -j$(($(nproc)+1))
        find dl -size -1024c -exec rm -f {} \;
        
    - name: Compile firmware
      run: |
        cd openwrt
        if [ "${{ github.event.inputs.multithreading }}" = "true" ]; then
          make -j$(nproc)
        else
          make -j1 V=s
        fi

    - name: Package firmware path
      run: |
        cd openwrt/bin/targets/*/*
        echo "FIRMWARE=$PWD" >> $GITHUB_ENV

    - name: Upload firmware and config to release
      if: env.UPLOAD_RELEASE == 'true'
      uses: softprops/action-gh-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: release-${{ github.run_number }}
        name: Auto Firmware ${{ github.run_number }}
        files: |
          ${{ env.FIRMWARE }}/*
          ./*.config
        body: |
          Auto firmware release for ${{ github.event.inputs.repo }} (${{ github.event.inputs.branch }})

    - name: Clean workflow history
      uses: Mattraks/delete-workflow-runs@v2
      with:
        retain_days: 0
        keep_minimum_runs: 2
